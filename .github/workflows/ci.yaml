name: Continuous integration

on: [push, pull_request]

env:
    CARGO_TERM_COLOR: always

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Cargo cache
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/registry
                      ./target
                  key: test-cargo-registry

            - name: Unit tests
              run: cargo test --bins

            - name: Integration tests
              run: cargo test --test '*' -- --test-threads=1

    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Cargo cache
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      ./target
                  key: test-cargo-registry

            - name: Clippy
              run: cargo clippy

            - name: Format
              run: cargo fmt --check

    coverage:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Cargo cache
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      ./target
                  key: test-cargo-registry

            - name: Install cargo-llvm-cov
              uses: taiki-e/install-action@cargo-llvm-cov

            - name: Generate code coverage
              run: cargo llvm-cov --lcov --output-path lcov.info

            - name: Upload to codecov.io
              uses: codecov/codecov-action@v3
              with:
                  files: lcov.info
                  fail_ci_if_error: true

    # https://github.com/nicolas-van/rust-cross-compile-example/
    build:
        strategy:
            fail-fast: false
            matrix:
                include:
                    - TARGET: x86_64-unknown-linux-gnu
                      OS: ubuntu-latest
                    - TARGET: aarch64-unknown-linux-gnu
                      OS: ubuntu-latest
        needs: test
        runs-on: ${{ matrix.OS }}
        env:
            NAME: cres
            TARGET: ${{ matrix.TARGET }}
            OS: ${{ matrix.OS }}
        steps:
            - uses: actions/checkout@v3
            - name: Cargo cache
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/registry
                      ./target
                  key: build-cargo-registry-${{matrix.TARGET}}

            - name: List
              run: find ./

            - name: Install and configure dependencies
              run: |
                  # dependencies are only needed on ubuntu as that's the only place where
                  # we make cross-compilation
                  if [[ $OS =~ ^ubuntu.*$ ]]; then
                    sudo apt-get install -qq crossbuild-essential-arm64 crossbuild-essential-armhf
                  fi

                  # some additional configuration for cross-compilation on linux
                  cat >>~/.cargo/config <<EOF
                  [target.aarch64-unknown-linux-gnu]
                  linker = "aarch64-linux-gnu-gcc"
                  EOF

            - name: Install rust target
              run: rustup target add $TARGET

            - name: Build
              run: cargo build --release --target $TARGET
